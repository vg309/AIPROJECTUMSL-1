# -*- coding: utf-8 -*-
"""AI-project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xlJX0iseBffFhaqGTQnacLyx83i4Do0y
"""

import pandas as pd
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Load data
df = pd.read_csv('CompleteResponses.csv', delimiter=',')
df.shape
df.head(10)

# Normalize data

# Remove the target column from the DataFrame
target_col = 'brand'
X = df.drop(columns=[target_col])

# Compute the mean and standard deviation of each column
means = X.mean()
stds = X.std()

# Subtract the mean and divide by the standard deviation for each value in each column
for col in X.columns:
    X[col] = (X[col] - means[col]) / stds[col]

# Add the target column back to the DataFrame
df_norm = pd.concat([X, df[target_col]], axis=1)

df_norm.head()

# Plot distributions
df_norm.hist(figsize=(12,15))
df_norm.head()

# Split into features and labels
X = df_norm.iloc[:, :-1].values
y = df_norm.iloc[:, -1].values

# Build multilayer model to overfit data
model = Sequential()

model.add(Dense(1, activation='sigmoid', input_dim=df_norm.shape[1]-1))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=["accuracy"])

model.fit(X, y, epochs=200, verbose=1)

# Build multilayer model to overfit data
model = Sequential()

model.add(Dense(16, activation='relu', input_dim=df_norm.shape[1]-1))
model.add(Dense(8, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=["accuracy"])

model.fit(X, y, epochs=100, verbose=1)